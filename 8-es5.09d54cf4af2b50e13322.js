(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{Lmj8:function(n,t,e){"use strict";e.r(t);var l=e("CcnG"),a=function(){function n(){this.content=[{title:"",type:"paragraphs",data:["JavaScript is a multi-paradigm language, supporting\xa0imperative/procedural\xa0programming along with\xa0OOP\xa0(Object-Oriented Programming) and\xa0functional programming. JavaScript supports OOP with\xa0prototypal inheritance."],subTitle:"",footerText:"",text:""},{title:"",type:"list",data:["Prototypal inheritance (also: prototypes, OLOO)","Functional programming (also: closures, first class functions, lambdas)"],subTitle:"",footerText:"",text:""},{title:"Classical inheritance and Prototypal inheritance",type:"paragraphs",data:["In JavaScript, prototypal inheritance is simpler &amp; more flexible than class inheritance.","Class Inheritance -\xa0Instances inherit from classes (like a blueprint\u200a\u2014\u200aa description of the class), and create sub-class relationships: hierarchical class taxonomies. Instances are typically instantiated via constructor functions with the\xa0\u2018new\u2019 keyword. Class inheritance may or may not use the\xa0\u2018class\u2019 keyword from ES6.","Prototypal Inheritance -\xa0Instances inherit directly from other objects. Instances are typically instantiated via factory functions or\xa0\u2018Object.create()\u2019. Instances may be composed from many different objects, allowing for easy selective inheritance."],subTitle:"",footerText:"",text:""},{title:"",type:"list",data:["Pros - It\u2019s easy to understand the basic concept of objects and easy to interpret the meaning of method calls. OOP tends to use an imperative style rather than a declarative style, which reads like a straight-forward set of instructions for the computer to follow.","Cons - OOP typically depends on shared state. Objects and behaviours are typically tacked together on the same entity, which may be accessed at random by any number of functions with non-deterministic order, which may lead to undesirable behaviour such as race conditions."],subTitle:"",footerText:"",text:""},{title:"Functional programming",type:"paragraphs",data:["Functional programming produces programs by composing mathematical functions and avoids shared state &amp; mutable data. Functional programming is an essential concept in JavaScript (one of the two pillars of JavaScript). Several common functional utilities are: Pure functions / function purity, Avoid side-effects, Simple function composition. Mention of features that support FP: first-class functions, higher order functions, functions as arguments/values."],subTitle:"",footerText:"",text:""},{title:"",type:"list",data:["Pros - Using the functional paradigm, programmers avoid any shared state or side-effects, which eliminate bugs caused by multiple functions competing for the same resources. With features such as the availability of point-free style (aka tacit programming), functions tend to be radically simplified and easily recomposed for more generally reusable code compared to OOP. FP also tends to favour declarative and denotational styles, which do not spell out step-by-step instructions for operations, but instead concentrate on\xa0what to do, letting the underlying functions take care of the\xa0how. This leaves tremendous latitude for refactoring and performance optimization, even allowing you to replace entire algorithms with more efficient ones with very little code change. (e.g., memoize, or use lazy evaluation in place of eager evaluation). Computation that makes use of pure functions is also easy to scale across multiple processors, or across distributed computing clusters without fear of threading resource conflicts, race conditions, etc...","Cons -\xa0Over exploitation of FP features such as point-free style and large compositions can potentially reduce readability because the resulting code is often more abstractly specified, terser, and less concrete. More people are familiar with\xa0OO\xa0and imperative programming than functional programming, so even common idioms in functional programming can be confusing to new team members. FP has a much steeper learning curve than OOP because the broad popularity of OOP has allowed the language and learning materials of OOP to become more conversational, whereas the language of FP tends to be much more academic and formal. FP concepts are frequently written about using idioms and notations from lambda calculus, algebras, and category theory, all of which requires a prior knowledge foundation in those domains to be understood."],subTitle:"",footerText:"",text:""},{title:"When is prototypal inheritance an appropriate choice?",type:"paragraphs",data:["There is more than one type of prototypal inheritance: Delegation\xa0(i.e., the prototype chain), Concatenative\xa0(i.e. mixins,\xa0\u2018Object.assign()\u2019) and Functional\xa0(Not to be confused with functional programming. A function used to create a closure for private state/encapsulation).","Each type of prototypal inheritance has its own set of use-cases, but all of them are equally useful in their ability to enable\xa0composition,\xa0which creates\xa0has-a\xa0or\xa0uses-a\xa0or\xa0can-do\xa0relationships as opposed to the\xa0is-a\xa0relationship created with class inheritance."],subTitle:"",footerText:"",text:""},{title:"What does \u201cfavour object composition over class inheritance\u201d mean?",type:"paragraphs",data:["It means that code reuse should be achieved by assembling smaller units of functionality into new objects instead of inheriting from classes and creating object taxonomies. In other words, use\xa0can-do, has-a,\xa0or\xa0uses-a\xa0relationships instead of\xa0is-a relationships."],subTitle:"",footerText:"",text:""},{title:"",type:"quote",data:["If a feature is sometimes useful and sometimes dangerous and if there is a better option than\xa0always use the better option.\u201d ~ Douglas Crockford"],subTitle:"",footerText:"",text:""},{title:"Synchronous vs Asynchronous programming",type:"paragraphs",data:["Synchronous programming means that, barring conditionals and function calls, code is executed sequentially from top-to-bottom, blocking on long-running tasks such as network requests and disk I/O.","Asynchronous programming means that the engine runs in an event loop. When a blocking operation is needed, the request is started, and the code keeps running without blocking for the result. When the response is ready, an interrupt is fired, which causes an event handler to be run, where the control flow continues. In this way, a single program thread can handle many concurrent operations.","User interfaces are asynchronous by nature, and spend most of their time waiting for user input to interrupt the event loop and trigger event handlers. Node is asynchronous by default, meaning that the server works in much the same way, waiting in a loop for a network request, and accepting more incoming requests while the first one is being handled. This is important in JavaScript, because it is a very natural fit for user interface code, and very beneficial to performance on the server."],subTitle:"",footerText:"",text:""}]}return n.ngInjectableDef=l.Fb({factory:function(){return new n},token:n,providedIn:"root"}),n}(),o=function(){function n(n){this.proParadigmsService=n,this.pageTitle="Programming paradigms"}return n.prototype.ngOnInit=function(){this.content=this.proParadigmsService.content},n}(),i=function(){return function(){}}(),u=e("pMnS"),r=e("21Lb"),s=e("OzfB"),c=e("Fzqc"),p=e("Ip0R"),f=e("8ef6"),m=e("XpDt"),h=e("WHjn"),b=e("nlns"),d=e("57tH"),g=e("C/7A"),y=e("toH5"),x=e("uilG"),w=e("aLe/"),v=e("Ln9c"),k=e("dJpi"),L=l.nb({encapsulation:2,styles:[],data:{}});function O(n){return l.Db(0,[(n()(),l.pb(0,0,null,null,1,"h3",[],null,null,null,null,null)),(n()(),l.Cb(1,null,["",""]))],null,function(n,t){n(t,1,0,null==t.parent.parent.context.$implicit?null:t.parent.parent.context.$implicit.title)})}function F(n){return l.Db(0,[(n()(),l.pb(0,0,null,null,1,"div",[],null,null,null,null,null)),(n()(),l.Cb(1,null,[" "," "]))],null,function(n,t){n(t,1,0,t.context.$implicit)})}function P(n){return l.Db(0,[(n()(),l.pb(0,0,null,null,6,"article",[["fxLayout","column"],["fxLayoutGap","10px"]],null,null,null,null,null)),l.ob(1,671744,null,0,r.c,[l.k,s.i,[2,r.k],s.f],{fxLayout:[0,"fxLayout"]},null),l.ob(2,1720320,null,0,r.d,[l.k,l.z,c.b,s.i,[2,r.j],s.f],{fxLayoutGap:[0,"fxLayoutGap"]},null),(n()(),l.eb(16777216,null,null,1,null,O)),l.ob(4,16384,null,0,p.j,[l.O,l.L],{ngIf:[0,"ngIf"]},null),(n()(),l.eb(16777216,null,null,1,null,F)),l.ob(6,278528,null,0,p.i,[l.O,l.L,l.s],{ngForOf:[0,"ngForOf"]},null)],function(n,t){n(t,1,0,"column"),n(t,2,0,"10px"),n(t,4,0,null==t.parent.context.$implicit?null:t.parent.context.$implicit.title),n(t,6,0,null==t.parent.context.$implicit?null:t.parent.context.$implicit.data)},null)}function I(n){return l.Db(0,[(n()(),l.pb(0,0,null,null,2,"app-code-view",[["fxLayout","row"]],null,null,null,f.b,f.a)),l.ob(1,671744,null,0,r.c,[l.k,s.i,[2,r.k],s.f],{fxLayout:[0,"fxLayout"]},null),l.ob(2,638976,null,0,m.a,[],{content:[0,"content"]},null)],function(n,t){n(t,1,0,"row"),n(t,2,0,t.parent.context.$implicit)},null)}function T(n){return l.Db(0,[(n()(),l.pb(0,0,null,null,1,"app-list-view",[],null,null,null,h.b,h.a)),l.ob(1,114688,null,0,b.a,[],{content:[0,"content"]},null)],function(n,t){n(t,1,0,t.parent.context.$implicit)},null)}function j(n){return l.Db(0,[(n()(),l.pb(0,0,null,null,8,"div",[["fxLayout","column"],["fxLayoutGap","10px"]],[[8,"id",0]],null,null,null,null)),l.ob(1,671744,null,0,r.c,[l.k,s.i,[2,r.k],s.f],{fxLayout:[0,"fxLayout"]},null),l.ob(2,1720320,null,0,r.d,[l.k,l.z,c.b,s.i,[2,r.j],s.f],{fxLayoutGap:[0,"fxLayoutGap"]},null),(n()(),l.eb(16777216,null,null,1,null,P)),l.ob(4,16384,null,0,p.j,[l.O,l.L],{ngIf:[0,"ngIf"]},null),(n()(),l.eb(16777216,null,null,1,null,I)),l.ob(6,16384,null,0,p.j,[l.O,l.L],{ngIf:[0,"ngIf"]},null),(n()(),l.eb(16777216,null,null,1,null,T)),l.ob(8,16384,null,0,p.j,[l.O,l.L],{ngIf:[0,"ngIf"]},null)],function(n,t){n(t,1,0,"column"),n(t,2,0,"10px"),n(t,4,0,"paragraphs"===(null==t.context.$implicit?null:t.context.$implicit.type)),n(t,6,0,"code"===(null==t.context.$implicit?null:t.context.$implicit.type)),n(t,8,0,"list"===(null==t.context.$implicit?null:t.context.$implicit.type))},function(n,t){n(t,0,0,null==t.context.$implicit?null:t.context.$implicit.title)})}function $(n){return l.Db(0,[(n()(),l.pb(0,0,null,null,23,"div",[["class","main-page"],["fxLayout","column"]],null,null,null,null,null)),l.ob(1,671744,null,0,r.c,[l.k,s.i,[2,r.k],s.f],{fxLayout:[0,"fxLayout"]},null),(n()(),l.pb(2,0,null,null,4,"app-top-menu",[["fxFlex","80px"],["fxLayout","row"],["fxLayoutAlign","space-between center"]],null,null,null,d.b,d.a)),l.ob(3,671744,null,0,r.c,[l.k,s.i,[2,r.k],s.f],{fxLayout:[0,"fxLayout"]},null),l.ob(4,671744,null,0,r.b,[l.k,s.i,[2,r.i],s.f],{fxLayoutAlign:[0,"fxLayoutAlign"]},null),l.ob(5,671744,null,0,r.a,[l.k,s.i,s.e,r.h,s.f],{fxFlex:[0,"fxFlex"]},null),l.ob(6,114688,null,0,g.a,[y.a],null,null),(n()(),l.pb(7,0,null,null,16,"div",[["class","main-content"],["fxFlex","100%"],["fxLayout","row"],["fxLayoutGap","20px"]],null,null,null,null,null)),l.ob(8,671744,null,0,r.c,[l.k,s.i,[2,r.k],s.f],{fxLayout:[0,"fxLayout"]},null),l.ob(9,1720320,null,0,r.d,[l.k,l.z,c.b,s.i,[2,r.j],s.f],{fxLayoutGap:[0,"fxLayoutGap"]},null),l.ob(10,671744,null,0,r.a,[l.k,s.i,s.e,r.h,s.f],{fxFlex:[0,"fxFlex"]},null),(n()(),l.pb(11,0,null,null,9,"section",[["fxFlex","70%"],["fxLayout","column"],["fxLayoutGap","16px"]],null,null,null,null,null)),l.ob(12,671744,null,0,r.c,[l.k,s.i,[2,r.k],s.f],{fxLayout:[0,"fxLayout"]},null),l.ob(13,1720320,null,0,r.d,[l.k,l.z,c.b,s.i,[2,r.j],s.f],{fxLayoutGap:[0,"fxLayoutGap"]},null),l.ob(14,671744,null,0,r.a,[l.k,s.i,s.e,r.h,s.f],{fxFlex:[0,"fxFlex"]},null),(n()(),l.pb(15,0,null,null,1,"h2",[],null,null,null,null,null)),(n()(),l.Cb(16,null,["",""])),(n()(),l.pb(17,0,null,null,3,"perfect-scrollbar",[],[[2,"ps-show-limits",null],[2,"ps-show-active",null]],null,null,x.b,x.a)),l.ob(18,507904,null,0,w.b,[l.z,l.h,l.B],null,null),(n()(),l.eb(16777216,null,0,1,null,j)),l.ob(20,278528,null,0,p.i,[l.O,l.L,l.s],{ngForOf:[0,"ngForOf"]},null),(n()(),l.pb(21,0,null,null,2,"app-aside-summary",[["fxFlex","30%"]],null,null,null,v.b,v.a)),l.ob(22,671744,null,0,r.a,[l.k,s.i,s.e,r.h,s.f],{fxFlex:[0,"fxFlex"]},null),l.ob(23,114688,null,0,k.a,[y.a],{content:[0,"content"],pagePath:[1,"pagePath"]},null)],function(n,t){var e=t.component;n(t,1,0,"column"),n(t,3,0,"row"),n(t,4,0,"space-between center"),n(t,5,0,"80px"),n(t,6,0),n(t,8,0,"row"),n(t,9,0,"20px"),n(t,10,0,"100%"),n(t,12,0,"column"),n(t,13,0,"16px"),n(t,14,0,"70%"),n(t,18,0),n(t,20,0,e.content),n(t,22,0,"30%"),n(t,23,0,e.content,"pro-paradigms")},function(n,t){n(t,16,0,t.component.pageTitle),n(t,17,0,l.yb(t,18).autoPropagation,l.yb(t,18).scrollIndicators)})}function C(n){return l.Db(0,[(n()(),l.pb(0,0,null,null,1,"app-pro-paradigms",[],null,null,null,$,L)),l.ob(1,114688,null,0,o,[a],null,null)],function(n,t){n(t,1,0)},null)}var G=l.lb("app-pro-paradigms",o,C,{},{},[]),S=e("hUWP"),q=e("3pJQ"),D=e("V9q+"),z=e("FpXt"),J=e("ZYCi");e.d(t,"ProParadigmsModuleNgFactory",function(){return A});var A=l.mb(i,[],function(n){return l.vb([l.wb(512,l.j,l.Z,[[8,[u.a,G]],[3,l.j],l.x]),l.wb(4608,p.l,p.k,[l.u,[2,p.x]]),l.wb(5120,l.b,function(n,t){return[s.j(n,t)]},[p.c,l.B]),l.wb(4608,y.a,y.a,[]),l.wb(4608,a,a,[]),l.wb(1073742336,p.b,p.b,[]),l.wb(1073742336,s.c,s.c,[]),l.wb(1073742336,c.a,c.a,[]),l.wb(1073742336,r.g,r.g,[]),l.wb(1073742336,S.b,S.b,[]),l.wb(1073742336,q.a,q.a,[]),l.wb(1073742336,D.a,D.a,[[2,s.g],l.B]),l.wb(1073742336,w.d,w.d,[]),l.wb(1073742336,z.a,z.a,[]),l.wb(1073742336,J.l,J.l,[[2,J.q],[2,J.k]]),l.wb(1073742336,i,i,[]),l.wb(256,w.a,z.b,[]),l.wb(1024,J.i,function(){return[[{path:"",component:o}]]},[])])})}}]);